name: Laravel CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  laravel-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: instatasks
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, bcmath, pdo, pdo_mysql, zip, curl

    - name: Install Composer dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader

    - name: Create .env
      run: |
        cp .env.example .env
        echo "APP_ENV=testing" >> .env
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=mysql" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=instatasks" >> .env
        echo "DB_USERNAME=user" >> .env
        echo "DB_PASSWORD=password" >> .env

    - name: Wait for MySQL
      run: |
        echo "Waiting for MySQL..."
          for i in {1..20}; do
            if mysqladmin ping -h mysql -utestuser -ptestpass --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting..."
            sleep 3
          done

        
    - name: Generate app key
      run: php artisan key:generate

    - name: Run migrations
      run: php artisan migrate --force

    - name: Run tests
      run: php artisan test

  docker-build:
    needs: laravel-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: docker/php/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/instatasks:latest
